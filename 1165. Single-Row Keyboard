class Solution(object):
    def calculateTime(self, keyboard, word):
        """
        :type keyboard: str
        :type word: str
        :rtype: int
        """
        
        res=abs(keyboard.index(word[0])-0)
        for i,letter in enumerate(word):
            start = keyboard.index(letter)
            if i < len(word)-1:
                finish = keyboard.index(word[i+1])
                res += abs(finish-start)
        return res
        
        #================================== A faster Version would be =====================================================#
          
# Time:  O(n)
# Space: O(1)

class Solution(object):
    def calculateTime(self, keyboard, word):
        """
        :type keyboard: str
        :type word: str
        :rtype: int
        """
        lookup = {c:i for i, c in enumerate(keyboard)}
        result, prev = 0, 0
        for c in word:
            result += abs(lookup[c]-prev)
            prev = lookup[c]
        return result
