# This Question was solved by string functions + slicing +knowing which ones slice and which ones don't slice
class Solution(object):
    def licenseKeyFormatting(self, S, K):
        """
        :type S: str
        :type K: int
        :rtype: str
        """
        # removing all the '-' and making them all into upper case
        S = S.replace('-', '').upper()
        
        #Getting the length of the string S
        ls = len(S)
        
        #if the length is divisble by the number of parts K then the position would be equal to K
        if ls % K == 0:
            pos = K
        else:
            # if it is not divisble then
            pos = ls % K
            
        # everything until the assigned position.
        res = S[:pos]
        
        # while the position is less than the number of 
        # letters keep moving up the position by the number of parts starting from the last position
        while pos < ls:
            res += '-' + S[pos:pos + K]
            pos += K
        return res
