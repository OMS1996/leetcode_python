# Definition for a binary tree node.

class TreeNode(object):
    def __init__(self, x):
        self.val = x
        self.left = None
        self.right = None

class Solution(object):
    def preorderTraversal(self, root):
        
        """
        :type root: TreeNode
        :rtype: List[int]
        """
        # Base checking code
        if root is None:
            return []
        
        # initializing the stack and the output list
        # Stack is first in first out
        stack, output = [root, ], []
        
        # until the stack is Completely and utterly empty
        while stack:
            # Initialize the root with the Current TreeNode Class Object
            root = stack.pop()
            # if the root is not empty just to save to time
            if root is not None:
                #add the traversal output
                output.append(root.val)
                #Add to the Stack
                #right side first
                if root.right is not None:
                    stack.append(root.right)
                if root.left is not None:
                    stack.append(root.left)
            
        return output
        
        
        
        
        
        
        
        
        
        
        
        
        
