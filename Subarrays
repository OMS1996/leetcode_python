#!/bin/python3

import math
import os
import random
import re
import sys



#
# Complete the 'solve' function below.
#
# The function is expected to return a STRING.
# The function accepts following parameters:
#  1. INTEGER k
#  2. INTEGER_ARRAY numbers
# Getting all the subarrays
# All the code was developed using my personal jupyter notebook, so i couldnt import the markdowns
def get_subarrays(k,arr):
    '''Getting all the subarrays'''
    
    #creating an array for the subarrays
    sub_arrays= []
    
    # Starts from the first index.
    start= 0
    
    # Ending index
    end= k

    #looping the length of the array
    for i in range(len(arr)):
        if end < len(arr)+k:  
            sub_arrays.append(arr[start:end])
            #Moving the cursor with it
            start=start+k
            end=end+k
            #returning the one with the highes value
    return sub_arrays

# Get the unique subarray
def get_unique(arr):
    unique_sub = []
    for i in arr:
        unique_sub.append(list(set(i)))
    return unique_sub

# Getting the length of every subarray
def get_length(arr):
    lens = []
    for i in arr:
        lens.append(len(i))
    return lens


# Checking if they are all the same length
def check(list1, val): 
    return(all(x == val for x in list1))

# Results
def result(k,arr):
    subs = get_subarrays(k,arr)
    unique_subs = get_unique(subs)
    lens_subs = get_length(unique_subs)
    len_check = check(lens_subs,k)
    return unique_subs,len_check
# Solving
def solve(k,numbers):

    #k,numbers,subs,check what we have
    subs,check =result(k,numbers)
    if check == False:
        return "No"
    else:
        return "Yes"
    

if __name__ == '__main__':
